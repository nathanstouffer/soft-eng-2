model IteratorPattern

class Iterator
attributes
operations
  next()
    begin
    end

  hasNext(): Boolean
    begin
    end

end

class Container < Iterator
attributes
operations
  set()
    begin
    end

  get()

  createIterator(): Iterator
    begin
      declare c:Container;
      result := c
    end

  next()
  hasNext(): Boolean
end

class Client
attributes
operations
  populateContainer()
    begin
      declare c:Container;
      c.set()
    end

  traverse()
    begin
      declare trav:Iterator;
      trav.next()
    end
end

association client_container between
  Client[0] role client2
  Container[0..*] role container
end

association client_iterator between
  Client[0] role client1
  Iterator[0..*] role iter
end
